# Your keymap
#
# Atom keymaps work similarly to stylesheets. Just as stylesheets use selectors
# to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# '.editor':
#   'enter': 'editor:newline'
#
# 'body':
#   'ctrl-P': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
'body':
  'cmd-o': 'fuzzy-finder:toggle-file-finder'

# Temporary fix 'till the PR is merged
'body.code-links-meta atom-text-editor':
  'cmd': 'code-links:tmp-show-links'

'atom-text-editor':
  'cmd-shift-up': 'editor:move-line-up'
  'cmd-shift-down': 'editor:move-line-down'
  'cmd-shift-left': 'editor:outdent-selected-rows'
  'cmd-shift-right': 'editor:indent-selected-rows'

  'cmd-l': 'go-to-line:toggle'

'atom-text-editor.vim-mode:not(.insert-mode)':
  # Replace vim search with lazymotion
  '/': 'lazy-motion:forward-again'
  '?': 'lazy-motion:backward'
  'n': 'lazy-motion:forward-again'
  'N': 'lazy-motion:backward-again'

  ':': 'go-to-line:toggle'

  '=': 'editor:split-selections-into-lines'

'atom-text-editor.lazy-motion':
  'up': 'lazy-motion:set-history-prev'
  'down': 'lazy-motion:set-history-next'
  'shift-enter': 'lazy-motion:forward'
  'tab': 'lazy-motion:forward'
  'shift-tab': 'lazy-motion:backward'
